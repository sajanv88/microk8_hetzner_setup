kind: Deployment
apiVersion: apps/v1
metadata:
  name: mydpapi
  labels:
    app.kubernetes.io/name: "mydpapi"
    app.kubernetes.io/part-of: "mydpapi"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mydpapi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "mydpapi"
        app.kubernetes.io/part-of: "mydpapi"
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: mydpapi
          image: ghcr.io/sajanv88/mydpapi:latest
          imagePullPolicy: Always
          env:
            - name: ASPNETCORE_URLS
              value: "http://*"
            - name: PORT
              value: "80"
            - name: OpenAIRemoteService__Url
              value: "https://api.openai.com/v1"
            - name: OpenAIRemoteService__Token
              value: $OPENAI_TOKEN
            - name: ASPNETCORE_ENVIRONMENT
              value: "Production"
            - name: App__SelfUrl
              value: "https://mydpapi.sajankumarv.com"
          ports:
            - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: mydpapi
  labels:
    app.kubernetes.io/name: "mydpapi"
    app.kubernetes.io/part-of: "mydpapi"
spec:
  selector:
    app.kubernetes.io/name: mydpapi
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: http-ingress-mydpapi
  annotations:
    cert-manager.io/cluster-issuer: "lets-encrypt"
    kubernetes.io/ingress.class: "public"
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
  labels:
    app.kubernetes.io/part-of: "mydpapi"
spec:
  tls:
    - hosts:
        - mydpapi.sajankumarv.com
      secretName: mydpapi-tls
  rules:
    - host: mydpapi.sajankumarv.com
      http:
        paths:
          - backend:
              service:
                name: mydpapi
                port:
                  number: 80
            pathType: Prefix
            path: /()(.*)
